{"version":3,"sources":["components/UI/myModal/MyModal.module.css","components/UI/pagination/pagination.module.css","components/UI/navbar/navbar.module.css","components/UI/button/MyButtonComponent.module.css","components/UI/loader/Loader.module.css","components/UI/input/MyInputComponent.module.css","components/UI/button/MyButtonComponent.jsx","context/context.js","components/UI/navbar/Navbar.jsx","components/layout/LayoutMain.jsx","API/postService.js","hooks/useFetching.js","components/UI/loader/Loader.jsx","components/PostItemInfo.jsx","components/PrivateRoute.jsx","views/about.jsx","views/home.jsx","components/UI/input/MyInputComponent.jsx","views/login.jsx","views/notFoundPage.jsx","components/ClassCounter.jsx","components/Counter.jsx","components/PostItem.jsx","components/PostList.jsx","components/PostForm.jsx","components/UI/mySelect/mySelect.jsx","components/PostFilter.jsx","components/UI/myModal/MyModal.jsx","hooks/usePost.js","utils/pages.js","components/UI/pagination/Pagination.jsx","hooks/usePagination.js","views/posts.jsx","views/postsLoading.jsx","hooks/useObserver.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MyButtonComponent","children","props","className","classes","myBtn","AuthContext","createContext","Navbar","navigate","useNavigate","useContext","setIsAuth","isAuth","cl","navbar","onClick","type","localStorage","removeItem","navbar__links","to","LayoutMain","PostService","limit","page","axios","params","_page","_limit","response","id","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","Loader","loader","PostItemInfo","useLocation","useParams","post","setPost","comments","setComments","getById","data","fetchPostById","getCommentsById","fetchCommentsById","isCommLoading","commError","useEffect","console","log","userId","title","body","map","comment","postId","name","email","PrivateRoute","component","replace","About","Home","MyInputComponent","myInput","Login","onSubmit","e","preventDefault","setItem","handleSubmit","placeholder","NotFoundPage","ClassCounter","state","count","increment","bind","this","setState","decrement","React","Component","Counter","setCount","PostItem","number","remove","PostList","posts","length","style","textAlign","color","postItem","index","PostForm","create","value","onChange","target","Date","now","addPostHandler","MySelect","options","defaultValue","disabled","option","PostFilter","filter","setFilter","sort","selectedSort","query","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","currentTarget","myModalContent","usePosts","sortedPosts","useMemo","b","localeCompare","useSortedPosts","toUpperCase","includes","getPageCount","totalCount","Math","ceil","Pagination","totalPage","currentPage","changePage","paginationArr","arr","i","useGetPaginationArr","pagination","p","item","Posts","setPosts","bodyInputRef","useRef","valueInputRef","setValueInputRef","modal","setModal","sortedAndSearchedPosts","setTotalPage","limitPosts","setPage","postService","getAll","headers","fetchPosts","isPostsLoading","postError","ref","display","justifyContent","PostsLoading","setLimitPosts","lastElement","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","setTimeout","height","backgroundColor","App","getItem","Provider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b66f183c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__3FGzl\",\"myModalContent\":\"MyModal_myModalContent__3uWzA\",\"active\":\"MyModal_active__CLA6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3tHnb\",\"item\":\"pagination_item__2_t5d\",\"active\":\"pagination_active__2ruan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__3Rmby\",\"navbar__links\":\"navbar_navbar__links__1wO-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButtonComponent_myBtn__MsidN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1bkL5\",\"rotate\":\"Loader_rotate__23CcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInputComponent_myInput__2KD6n\"};","import{ React,useState} from 'react';\nimport  classes from './MyButtonComponent.module.css';\nconst MyButtonComponent = ({children,...props})=>{\n    \n   \n    return(\n       <button {...props} className={classes.myBtn} >{children}</button>\n\n    );\n\n}; \nexport default MyButtonComponent;","import { createContext } from \"react\";\n\nexport let AuthContext =  createContext(null);","import cl from './navbar.module.css';\nimport {Link,useNavigate} from 'react-router-dom';\nimport MyButtonComponent from '../button/MyButtonComponent';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../../context/context';\nconst Navbar = ()=>{\n    let navigate = useNavigate();\n    let {isAuth,setIsAuth} = useContext(AuthContext);\n    const logout = ()=>{\n        setIsAuth(false);\n        localStorage.removeItem('auth');\n    }\n    return(\n        <div className={cl.navbar}>\n            <button onClick={()=>navigate(-1)}>go back</button>\n            <button type=\"button\" onClick={logout}>cancel auth</button>\n          <div className={cl.navbar__links}>\n              \n              <Link to=\"posts\">posts </Link> |\n              <Link to=\"postsloading\">posts loading</Link> |\n              <Link to=\"about\">about </Link> |\n              <Link to=\"\">home </Link> |\n          </div>\n\n\n      </div>\n    );\n\n\n}\nexport default Navbar;","import {Link,Outlet} from 'react-router-dom';\nimport Navbar from '../UI/navbar/Navbar';\n\n\nfunction LayoutMain() {\n\n  \n  \n    return (\n      <div >\n         \n          <Navbar></Navbar>\n          LayoutMain\n          <Outlet></Outlet>\n     </div>\n    );\n  }\n  \n  export default LayoutMain;\n  ","import axios from 'axios';\n\nexport default class PostService {\n\n    static async getAll(limit=10,page=1){\n        \n       \n        const response = await axios(`https://jsonplaceholder.typicode.com/posts`,{\n            params:{\n                _page:page,\n                _limit: limit,\n               \n            }\n\n        });\n            return response;\n        \n        \n    }\n    static async getById(id){\n        \n        const response = await axios(`https://jsonplaceholder.typicode.com/posts/${id}`);\n        return response;\n        \n        \n    }\n    static async getCommentsById(id){\n        \n        const response = await axios(`https://jsonplaceholder.typicode.com/comments?postId=${id}`);\n        return response;\n        \n        \n    }\n}","import {useState} from 'react';\n\nexport const useFetching  = (callback)=>{\n\n    const [isLoading,setIsLoading] = useState(false);\n    const [error,setError] = useState('');\n\n    const fatching = async(...args)=>{\n        try {\n            setIsLoading(true);\n            await callback(...args);\n        } catch (error) {\n            setError(error.message);\n           \n        }finally{\n            setIsLoading(false);\n        }\n    }\n\n   return [fatching,isLoading,error];\n\n}\n\n\n\n\n","import React from 'react';\nimport cl from './Loader.module.css';\n\n\n\n\nconst Loader = ()=>{\n      \n   \n   \n        return(\n        \n            <div className={cl.loader}>\n              \n            </div>\n            \n\n\n\n        );\n    \n\n}\nexport default Loader;","import{ React, useEffect, useState} from 'react';\nimport {useLocation,useParams} from 'react-router-dom';\nimport PostService from '../API/postService';\nimport { useFetching } from '../hooks/useFetching';\nimport Loader from './UI/loader/Loader';\n\n\n\nconst PostItemInfo = ()=>{\n    let location = useLocation();\n    let params = useParams();\n    // console.log(params);\n    // console.log(location);\n    let [post,setPost] = useState({});\n    let [comments,setComments] = useState([]);\n    let [fetchPostById,isLoading,error] = useFetching(async()=>{\n        let response = await PostService.getById(params.id);\n       setPost(response.data);\n    });\n\n    let [fetchCommentsById,isCommLoading,commError] = useFetching(async()=>{\n        let response = await PostService.getCommentsById(params.id);\n        setComments(response.data);\n    });\n    \n\n    useEffect(()=>{\n        fetchPostById();\n        fetchCommentsById();\n    },[])\n   console.log(commError);\n    return( <div className=\"post_item_info\">\n        {error   ?  (<div>{error}</div>):''}\n       \n        {isLoading && isCommLoading ?  (<Loader></Loader>) : (\n           \n                <div>\n                    <div>ID POST Param: {params.id}</div>\n                    <div>ID: {post.id}</div>\n                    <div>ID User : {post.userId}</div>\n                    <div><strong>{post.title}</strong></div>\n                    <div> {post.body}</div> \n                </div>\n                \n        ) }\n        {commError  ?  (<div>{commError}</div>):''}\n\n        {isCommLoading ?  (<Loader></Loader>) : (\n          \n            <div className=\"comments\">\n                <h2>Comments</h2>\n                {comments.map((comment)=>{return(\n                    <div className=\"comment-item\" key={comment.id}>\n                       \n                        <div>\n                            <div>Post id : {comment.postId}</div>\n                            <div>Id : {comment.id}</div>\n                            <div>Name :{comment.name}</div>\n                            <div>Email : {comment.email}</div>\n                            <div>{comment.body}</div>\n\n                        </div>\n                    </div>\n                );})}\n                \n            </div>\n               \n        \n           \n            \n        ) }\n        \n       \n            \n        \n\n        </div>\n    );\n\n}; \nexport default PostItemInfo;","import { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/context\";\n\nconst PrivateRoute = ({component})=>{\n    let {isAuth,setIsAuth} = useContext(AuthContext);\n    \n   \n    if(isAuth){\n        \n        // return children;\n        return component;\n    }else{\n        return <Navigate to=\"/login\" replace={true} />\n    }\n \n   \n    \n   \n}\nexport default PrivateRoute;","\nfunction About() {\n\n  \n  \n  return (\n    <div >\n        About\n   </div>\n  );\n}\n\nexport default About;\n","\nfunction Home() {\n\n  \n  \n    return (\n      <div >\n          Home\n     </div>\n    );\n  }\n  \n  export default Home;\n  ","import{ React} from 'react';\nimport  classes from './MyInputComponent.module.css';\nconst MyInputComponent = (props)=>{\n    \n   \n    return(\n       <input className={classes.myInput} {...props}/>\n\n    );\n\n}; \nexport default MyInputComponent;","import { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport MyButtonComponent from \"../components/UI/button/MyButtonComponent\";\nimport MyInputComponent from \"../components/UI/input/MyInputComponent\";\nimport { AuthContext } from \"../context/context\";\n\nfunction Login() {\n    let {isAuth,setIsAuth} = useContext(AuthContext);\n    let navigate = useNavigate();\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        setIsAuth(true);\n        localStorage.setItem('auth',true);\n        navigate('/posts');\n        // alert(\"submit\");\n    }\n  \n  \n    return (\n      <div >\n          <h2>Login Form</h2>\n          <form onSubmit={(e)=>handleSubmit(e)}>\n              <MyInputComponent type=\"text\"  placeholder=\"insert login\"/>\n              <MyInputComponent type=\"password\" placeholder=\"insert password\"/>\n              <MyButtonComponent type=\"submit\" >Login</MyButtonComponent>\n           \n          </form>\n     </div>\n    );\n  }\n  \n  export default Login;\n  ","\nfunction NotFoundPage() {\n\n  \n  \n    return (\n      <div >\n          NotFoundPage\n     </div>\n    );\n  }\n  \n  export default NotFoundPage;\n  ","import React from 'react';\n\n\nclass ClassCounter extends React.Component {\n\n    constructor(props){\n            super(props);\n            this.state = {\n                count:1,\n                name:\"Alex\"\n            };\n            this.increment = this.increment.bind(this);\n        \n            \n    }\n\n    increment (){\n       this.setState({count:this.state.count+1});\n    }\n\n    decrement (){\n        this.setState({count:this.state.count-1});\n    }\n\n    render(){\n        return (\n            <div>\n               Cont:{this.state.count} \n             \n               <button onClick={this.increment}>Increment (bind func)</button>\n               <button onClick={()=>this.decrement()}>Decrement (Arrow func)</button>\n           \n               \n           </div>\n       );\n    }\n}\nexport default ClassCounter;","import{ React,useState} from 'react';\n\nconst Counter = (props)=>{\n    const [count,setCount] = useState(0);\n    function increment() {\n   \n        setCount(count+1);\n      };\n      function decrement() {\n        setCount(count-1);\n       \n      };\n    return(\n        <div >\n            Cont:{count}\n            <button onClick={increment}>Increment</button>\n            <button onClick={decrement}>Decrement</button>\n        \n            \n        </div>\n\n    );\n\n}; \nexport default Counter;","import{ React} from 'react';\nimport { Link,useNavigate} from 'react-router-dom';\nimport MyButtonComponent from './UI/button/MyButtonComponent';\n\n\n\nconst PostItem = ({number,post:{id,title,body},post,remove})=>{\n    let navigate = useNavigate();\n\n    const handleClick = ()=>{\n        navigate(`${id}`);\n\n        \n       \n    }\n    return(\n        <div className=\"post\">\n            <div className=\"post__content\">\n            <p><strong>{number}: {title}</strong></p>\n            <p>id:<small>{id}</small></p>\n          \n            <div>\n                {body}\n            </div>\n            \n            </div>\n            <div className=\"post__btn\">\n            \n                <MyButtonComponent onClick={()=>{remove(post)}} >delete</MyButtonComponent>\n                <MyButtonComponent onClick={handleClick} >view post</MyButtonComponent>\n               \n                {/* <Link to={`${id}`}>{id}</Link> */}\n            </div>\n\n\n        </div>\n\n    );\n\n}; \nexport default PostItem;","import {React,useRef }from 'react';\nimport PostItem from './PostItem';\nimport cl from './PostList.module.css';\n\n\n\nconst PostList = ({posts,remove})=>{\n      \n   \n    if(posts.length==0){\n        return(<p style={{textAlign:'center', color:'red'}}><big> Posts not founds</big> </p>);\n    }else{\n        return(\n        \n            <div>\n                <h1>Post List</h1>\n               \n             \n                {posts.map((postItem ,index)=> {\n                 \n                    return(\n                       \n                            <PostItem   key ={postItem.id} remove={remove} number={index+1}  post={postItem}/>\n                          \n                       \n                    );\n\n                }\n                           \n                            \n                )}\n             \n              \n        \n        \n\n            </div>\n            \n\n\n\n        );\n    }\n\n}; \nexport default PostList;","import{ React,useState} from 'react';\n\nimport MyButtonComponent from './UI/button/MyButtonComponent';\nimport MyInputComponent from './UI/input/MyInputComponent';\n\nconst PostForm = ({create,...rest})=>{\n    const [post,setPost] = useState({title:'',body:''});\n\n    const addPostHandler = (e)=>{ \n        e.preventDefault();\n\n        create({...post,id:Date.now()});\n       \n        setPost({title:'',body:''});\n       \n    };\n    \n    return(\n        <form>\n           \n    \n            <label>Post Title</label>  \n            <MyInputComponent  \n            type=\"text\" value={post.title} \n            onChange={(e)=>{ setPost({...post,title:e.target.value})} }\n            placeholder=\"Insert title\"\n            />\n            <label>Post Body</label>\n            <MyInputComponent  \n            type=\"text\" \n            value={post.body} \n            onChange={(e)=>{ setPost({...post,body:e.target.value})} }\n            placeholder=\"Insert body \"\n            />\n            <MyButtonComponent  onClick={e=>addPostHandler(e)} >Add post</MyButtonComponent>\n      </form>\n\n    );\n\n}; \nexport default PostForm;","import{ React} from 'react';\n// import  classes from './MyInputComponent.module.css';\nconst MySelect = ({ options,defaultValue,value,onChange})=>{\n    \n   \n    return(\n        \n            <select  value={value} onChange={(e)=>{onChange(e.target.value)}}>\n                <option   disabled value=\"\">{defaultValue}</option>\n                {options.map((option,index)=>{ \n                    return ( <option  key={option.value} value={option.value}>{option.name}</option>);\n                })}\n            </select>\n        \n\n    );\n\n}; \nexport default MySelect;","import{ React} from 'react';\nimport MySelect from './UI/mySelect/mySelect';\nimport MyInput from './UI/input/MyInputComponent';\n\n\nconst PostFilter = ({filter,setFilter})=>{\n   \n    return(\n       <div>\n            <MySelect \n                value={filter.sort}\n                defaultValue=\"Sort to\" \n                onChange={selectedSort => { setFilter({...filter,sort:selectedSort});}}\n                options={[\n                    {name:\"title\",value:\"title\"},\n                    {name:\"body\",value:\"body\"}\n                ]}\n            />\n                \n                \n                <br/>\n                <hr/>\n                <br/>\n                \n            <MyInput\n                type=\"text\" \n                value={filter.query} \n                onChange={(e)=>{ setFilter({...filter,query:e.target.value}) } }\n                placeholder=\"Search by title \"\n            />\n\n       </div>\n\n    );\n\n}; \nexport default PostFilter;","import{ React} from 'react';\n\nimport cl from './MyModal.module.css';\n\n\nconst MyModal = ({children,visible,setVisible})=>{\n    const rootClasses  = [cl.myModal];\n    if(visible){\n        rootClasses.push(cl.active);\n    }\n   \n    return(\n     \n           \n        <div className={rootClasses.join(' ')} onClick={(e)=>{ if( e.currentTarget === e.target) { setVisible(false)}    }}>  \n            <div className={cl.myModalContent}>\n            {children}\n            \n            </div>\n\n        </div>\n      \n\n    );\n\n}; \nexport default MyModal;","import {React,useMemo} from 'react';\n\nexport const useSortedPosts  = (posts,sort)=>{\n\n    const sortedPosts =  useMemo (()=>{ \n        console.log(\"getSortedPosts is done\");\n        if(sort){\n          return [...posts].sort((a,b)=>{ return a[sort].localeCompare(b[sort]); });\n        }else{\n          return posts;\n        }\n     },[sort,posts] );\n\n     return sortedPosts;\n\n}\n\nexport const usePosts  = (posts,sort,query)=>{\n\n    const sortedPosts = useSortedPosts(posts,sort);\n    const sortedAndSearchedPosts = useMemo(()=>{\n        console.log(\"sortedAndSearchedPosts\");\n        if(query){\n         return sortedPosts.filter(post=> post.title.toUpperCase().includes(query.toUpperCase()));\n        }else{\n         return sortedPosts;\n        }\n        \n      },\n      [query,sortedPosts]);\n      \n      return sortedAndSearchedPosts;\n}\n\n\n","export const getPageCount  = (totalCount,limit)=>{\n    return Math.ceil(totalCount/limit);\n\n}","import  { useGetPaginationArr } from '../../../hooks/usePagination';\nimport cl from './pagination.module.css';\n\nconst Pagination = ({totalPage,currentPage,changePage})=>{\n   \n    const paginationArr = useGetPaginationArr(totalPage);\n\n    return (\n        <div className={cl.pagination}>\n\n        {  \n            paginationArr.length>0 ?(\n            paginationArr.map((p) =>{\n               \n                return(\n\n                <div \n                    className= { cl.item + ' ' + (  p==currentPage ? cl.active : '' ) } \n                   \n                    key={p}\n                    onClick={()=>{changePage(p)}}\n                    \n                    >{p}</div>\n                );\n            })\n\n        ):''\n        \n        }\n    </div>\n\n    );\n\n\n\n\n\n}\nexport default Pagination;","import { useMemo } from \"react\"\n\nexport const useGetPaginationArr = (totalPage)=>{\n      \n     const arr = useMemo(()=>{\n        let arr = [];\n        if(totalPage>0){\n            for(let i = 1; i<=totalPage; i++){\n                arr.push(i);\n            }\n            return arr;\n        }else{\n            return arr = [];\n        }\n      \n       \n       \n       \n    },[totalPage]);\n    return arr;\n\n}","import React,{useState,useRef,useEffect, useMemo} from 'react';\nimport ClassCounter from '../components/ClassCounter';\nimport Counter from '../components/Counter';\n\nimport PostList from '../components/PostList';\nimport PostForm from '../components/PostForm';\nimport  '../styles/App.css'\n\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/myModal/MyModal';\nimport MyButtonComponent from '../components/UI/button/MyButtonComponent';\nimport { usePosts } from '../hooks/usePost';\nimport { useFetching } from '../hooks/useFetching';\n\nimport postService from '../API/postService';\nimport Loader from '../components/UI/loader/Loader';\n\nimport {getPageCount} from '../utils/pages';\n\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { Outlet } from 'react-router';\n\nfunction Posts() {\n\n  const [posts,setPosts] = useState([]);\n\n  const bodyInputRef = useRef();\n  const [valueInputRef,setValueInputRef] = useState('');\n  const [modal,setModal] = useState(false);\n  const [filter,setFilter] = useState({sort:'',query:''});\n  const sortedAndSearchedPosts = usePosts(posts,filter.sort,filter.query);\n\n  const [totalPage,setTotalPage] = useState(0);\n  const [limitPosts,setLimitPosts] = useState(5);\n  const [page,setPage] = useState(1);\n\n  \n\n  const [fetchPosts,isPostsLoading,postError] = useFetching( async (limit,page)=>{\n    \n    const  response = await postService.getAll(limit,page);\n   \n    setPosts(response.data);\n    let totalCount = response.headers['x-total-count'];\n    setTotalPage(getPageCount(totalCount,limit));\n\n  });\n\n \n\n\n//Mounted component\n  useEffect(()=>{\n    fetchPosts(limitPosts,page);\n  },[]);\n\n  const createPost = (post)=>{ \n    setPosts([...posts,post]);\n    setModal(false);\n\n  };\n \n const removePost = (post)=>{\n  \n  setPosts(posts.filter(p=>p.id !== post.id));\n }\n\n const changePage = (page)=>{\n  setPage(page);\n  fetchPosts(limitPosts,page);\n }\n\n  \n  return (\n    <div className=\"App\">\n    <Counter/>\n    <ClassCounter/>\n    <br/>\n    \n    <form>\n      <div>\n        <p><strong> Value From Input with useRef:</strong> {valueInputRef}</p>  \n       \n        <input \n          ref={bodyInputRef} \n          type=\"text\" \n          placeholder=\"insert value\" \n          onChange={(e)=>{ setValueInputRef(e.target.value) }}\n        />\n      </div>\n      <br/>\n\n    </form>\n\n  \n    <MyButtonComponent type=\"button\" onClick={()=>{setModal(true)}}>Add post</MyButtonComponent>\n    <MyModal visible={modal} setVisible={setModal}>\n\n          <PostForm create={createPost} ></PostForm>\n      \n    </MyModal>\n    <br/>\n    <hr/>\n    <br/>\n\n   \n    <PostFilter filter = {filter} setFilter = {setFilter} ></PostFilter>\n    {postError ? (<div>{postError}</div>):''}\n    {isPostsLoading ? (<div style={{display:'flex',justifyContent:'center',}}><Loader></Loader></div>) : ( <PostList posts={sortedAndSearchedPosts} remove={removePost}></PostList>)}\n    \n    <Pagination totalPage={totalPage} currentPage={page} changePage={changePage}></Pagination>\n   \n   \n   \n\n\n      \n       \n      \n\n   </div>\n  );\n}\n\nexport default Posts;\n","import React,{useState,useRef,useEffect, useMemo} from 'react';\nimport ClassCounter from '../components/ClassCounter';\nimport Counter from '../components/Counter';\n\nimport PostList from '../components/PostList';\nimport PostForm from '../components/PostForm';\nimport  '../styles/App.css'\n\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/myModal/MyModal';\nimport MyButtonComponent from '../components/UI/button/MyButtonComponent';\nimport { usePosts } from '../hooks/usePost';\nimport { useFetching } from '../hooks/useFetching';\n\nimport postService from '../API/postService';\nimport Loader from '../components/UI/loader/Loader';\n\nimport {getPageCount} from '../utils/pages';\n\nimport Pagination from '../components/UI/pagination/Pagination';\nimport { useObserver } from '../hooks/useObserver';\nimport MySelect from '../components/UI/mySelect/mySelect';\n\n\nfunction PostsLoading() {\n\n  const [posts,setPosts] = useState([]);\n\n  const bodyInputRef = useRef();\n  \n  const [valueInputRef,setValueInputRef] = useState('');\n  const [modal,setModal] = useState(false);\n  const [filter,setFilter] = useState({sort:'',query:''});\n  const sortedAndSearchedPosts = usePosts(posts,filter.sort,filter.query);\n\n  const [totalPage,setTotalPage] = useState(0);\n  const [limitPosts,setLimitPosts] = useState(10);\n  const [page,setPage] = useState(1);\n  const lastElement = useRef();\n  \n   \n  \n\n  const [fetchPosts,isPostsLoading,postError] = useFetching( async (limit,page)=>{\n    \n    const  response = await postService.getAll(limit,page);\n   console.log([...posts,...response.data]);\n  \n    setPosts(page==1? response.data : [...posts,...response.data]);\n    let totalCount = response.headers['x-total-count'];\n    setTotalPage(getPageCount(totalCount,limit));\n\n  });\n\nuseObserver(lastElement,page<totalPage,isPostsLoading, ()=>{\n    setTimeout(()=>setPage(page+1),1000);\n    \n})\n//Mounted component\n\n\n  useEffect(()=>{\n    fetchPosts(limitPosts,page);\n  },[page,limitPosts]);\n\n  const createPost = (post)=>{ \n    setPosts([...posts,post]);\n    setModal(false);\n\n  };\n \n const removePost = (post)=>{\n  \n  setPosts(posts.filter(p=>p.id !== post.id));\n }\n\n const changePage = (page)=>{\n  setPage(page);\n//   fetchPosts(limitPosts,page);\n }\n\n  \n  return (\n    <div className=\"App\">\n    <Counter/>\n    <ClassCounter/>\n    <br/>\n    \n    <form>\n      <div>\n        <p><strong> Value From Input with useRef:</strong> {valueInputRef}</p>  \n       \n        <input \n          ref={bodyInputRef} \n          type=\"text\" \n          placeholder=\"insert value\" \n          onChange={(e)=>{ setValueInputRef(e.target.value) }}\n        />\n      </div>\n      <br/>\n\n    </form>\n\n  \n    <MyButtonComponent type=\"button\" onClick={()=>{setModal(true)}}>Add post</MyButtonComponent>\n    <MyModal visible={modal} setVisible={setModal}>\n\n          <PostForm create={createPost} ></PostForm>\n      \n    </MyModal>\n    <br/>\n    <hr/>\n    <br/>\n\n   \n    <PostFilter filter = {filter} setFilter = {setFilter} ></PostFilter>\n    <MySelect \n        value={limitPosts} \n        onChange={value=>{setLimitPosts(value); setPage(1)}}\n        defaultValue={\"quantyty elements on page\"}\n        options={[\n            {value: 5,name:'5'},\n            {value: 10,name:'10'},\n            {value: 20,name:'20'},\n            {value: 25,name:'25'},\n            {value: 50,name:'50'},\n            {value: -1,name:'all'}\n\n        ]}\n    />\n    {postError ? (<div>{postError}</div>):''}\n   \n     <PostList posts={sortedAndSearchedPosts} remove={removePost}></PostList>\n     {isPostsLoading && \n        <div style={{display:'flex',justifyContent:'center',}}><Loader></Loader></div>\n    }\n     <div ref={ lastElement } style={{height:\"20px\",backgroundColor:\"red\"}}></div>\n    \n    \n    <Pagination totalPage={totalPage} currentPage={page} changePage={changePage}></Pagination>\n   \n   \n   \n\n\n      \n       \n      \n\n   </div>\n  );\n}\n\nexport default PostsLoading;\n","import { useEffect, useRef } from \"react\";\n\n\nexport const useObserver  = (ref,canLoad,isLoading,callback)=>{\n    const observer = useRef();\n    \n    useEffect(()=>{\n        if(isLoading)return;\n        if(observer.current ) observer.current.disconnect();\n        var cb = function(entries, observer) {\n            if(entries[0].isIntersecting && canLoad){\n                callback();\n            }\n           \n            \n        };\n       observer.current = new IntersectionObserver(cb);\n       observer.current.observe(ref.current);\n\n        \n    },[isLoading]);\n\n\n   return ;\n\n}\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport {BrowserRouter,Route,Routes,Navigate, HashRouter} from 'react-router-dom';\nimport LayoutMain from './components/layout/LayoutMain';\nimport PostItemInfo from './components/PostItemInfo';\nimport PrivateRoute from './components/PrivateRoute';\nimport Navbar from './components/UI/navbar/Navbar';\nimport { AuthContext } from './context/context';\n\nimport  './styles/App.css'\nimport About from './views/about';\nimport Home from './views/home';\nimport Login from './views/login';\nimport NotFoundPage from './views/notFoundPage';\nimport Posts from './views/posts';\nimport PostsLoading from './views/postsLoading';\n\n\n\nfunction App() {\n  const [isAuth,setIsAuth] = useState(localStorage.getItem('auth')?localStorage.getItem('auth'):false);\n  \n  useEffect(()=>{\n    \n    if(localStorage.getItem('auth')){\n    \n      setIsAuth(true);\n    }\n  },[])\n  \n  // const prova  =()=>{\n  //   alert(\"prova\");\n  // }\n\n  return (\n    <div className=\"App\">\n      {isAuth ? \"isAuth\":'---' }\n      <AuthContext.Provider value={{isAuth,setIsAuth}}>\n       <HashRouter>\n        {/* <BrowserRouter basename={process.env.PUBLIC_URL }> */}\n        \n        \n            <Routes>\n            <Route path=\"/\" element={ <LayoutMain />} >\n              <Route index element={<PrivateRoute component={<Home></Home>}/> } />\n              <Route path=\"posts\" element={  <PrivateRoute component={ <Posts />}/> } />\n              <Route path=\"postsloading\" element={  <PrivateRoute component={ <PostsLoading />}/> } />\n              \n            \n            \n              <Route path=\"posts/:id\" element={<PrivateRoute component={<PostItemInfo/>}/> } />\n            \n              <Route path=\"about\" element={  <PrivateRoute component={<About />}/>   } />\n              <Route path=\"login\" element={<Login/>} />\n            \n              {/* <Route path=\"\" element={<Navigate replace to=\"/\" />} /> */}\n            \n              <Route path=\"*\" element={<NotFoundPage></NotFoundPage>} />\n              \n            </Route>\n            \n              \n            \n            </Routes>\n          \n      {/* </BrowserRouter> */}\n      </HashRouter>\n    </AuthContext.Provider>     \n      \n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}